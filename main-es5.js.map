{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/customer-list/customer-list.component.ts","webpack:///src/app/customer-list/customer-list.component.html","webpack:///src/app/customer/customer.component.ts","webpack:///src/app/customer/customer.component.html","webpack:///src/app/employees/employee/employee.component.ts","webpack:///src/app/employees/employee/employee.component.html","webpack:///src/app/employees/employees.component.ts","webpack:///src/app/employees/employees.component.html","webpack:///src/app/employees/list-employee/list-employee.component.ts","webpack:///src/app/employees/list-employee/list-employee.component.html","webpack:///src/app/images/image-list/image-list.component.ts","webpack:///src/app/images/image-list/image-list.component.html","webpack:///src/app/images/image/image.component.ts","webpack:///src/app/images/image/image.component.html","webpack:///src/app/images/images.component.ts","webpack:///src/app/images/images.component.html","webpack:///src/app/shared/customer.service.ts","webpack:///src/app/shared/employee.service.ts","webpack:///src/app/shared/image.service.ts","webpack:///src/app/shared/todo.service.ts","webpack:///src/app/todo/todo.component.ts","webpack:///src/app/todo/todo.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","entryComponents","providers","bootstrap","customerService","CustomerListComponent","customerArray","searchText","getCustomers","subscribe","list","map","item","$key","key","payload","val","confirm","deleteCustomer","showDeleteMessage","setTimeout","customer","fullName","toLowerCase","indexOf","CustomerComponent","formControls","form","controls","submitted","valid","get","value","insertCustomer","updateCustomer","showSuccessMessage","reset","setValue","email","mobile","location","onSubmit","EmployeeComponent","employeeService","toatsrService","resetForm","addEmployee","updateEmployee","success","formData","position","empCode","EmployeesComponent","ListEmployeeComponent","getEmployees","res","doc","data","employee","Object","assign","employeeId","deleteEmployee","ImageListComponent","imageService","imageDetailList","snapshotChanges","imageList","rowIndexArray","Array","from","Math","ceil","length","styles","ImageComponent","storage","selectedImage","formTemplate","caption","required","category","imageUrl","event","target","files","reader","FileReader","onload","imgSrc","result","readAsDataURL","formValue","isSubmitted","filePath","name","split","slice","join","Date","getTime","fileRef","ref","upload","pipe","getDownloadURL","url","insertImageDetails","showPreview","ImagesComponent","getImageDetailList","CustomerService","firebase","minLength","customerList","push","update","customerKey","remove","providedIn","EmployeeService","firestore","emp","collection","add","ImageService","imageDetails","TodoService","firebasedb","toDoList","isChecked","flag","TodoComponent","todoService","getToDoList","todoListArray","forEach","element","x","toJSON","sort","a","b","itemTitle","addTitle","checkTitle","removeTitle","onAdd","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule} from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomerComponent } from './customer/customer.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { ImagesComponent } from './images/images.component';\nimport { ImageComponent } from './images/image/image.component';\nimport { ImageListComponent } from './images/image-list/image-list.component';\n\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'image/upload', pathMatch: 'full'},\n  {path : 'image', component: ImagesComponent, children: [\n    {path: 'upload', component: ImageComponent},\n    {path: 'list', component: ImageListComponent}\n  ]},\n  {path : 'customer', component: CustomerComponent},\n  {path : 'todo', component: TodoComponent},\n  {path : 'employees', component: EmployeesComponent}\n];\n\n@NgModule({\n  imports: [\n    RouterModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular7';\n}\n","<nav color=\"secondary\">\n  <button class=\"btn\" mat-button routerLink=\"/todo\">To Do</button>\n  <button class=\"btn\" mat-button routerLink=\"/customer\">Customer</button>  \n  <button class=\"btn\" mat-button routerLink=\"/employees\">Employees</button>\n  <button class=\"btn\" mat-button routerLink=\"/image\">Images</button>\n</nav>\n<div class=\"jumbotron jumbtron-fluid\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// import { AngularFireModule } from \"angularfire2\";\n// import { AngularFireDatabaseModule } from \"angularfire2/database\";\n// import { AngularFirestoreModule } from \"angularfire2/firestore\";\n// import { AngularFirestore } from \"@angular/fire/firestore\";\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { AppComponent } from './app.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerService } from './shared/customer.service';\nimport { environment } from '../environments/environment';\nimport { TodoComponent } from './todo/todo.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { EmployeeComponent } from './employees/employee/employee.component';\nimport { ListEmployeeComponent } from './employees/list-employee/list-employee.component';\nimport { ImagesComponent } from './images/images.component';\nimport { ImageComponent } from './images/image/image.component';\nimport { ImageListComponent } from './images/image-list/image-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomerComponent,\n    CustomerListComponent,\n    TodoComponent,\n    EmployeeComponent,\n    ListEmployeeComponent,\n    EmployeesComponent,\n    ImagesComponent,\n    ImageComponent,\n    ImageListComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,\n    AngularFireStorageModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    AngularFireStorageModule,\n    AngularFireDatabaseModule\n  ],\n  entryComponents: [CustomerComponent],\n  providers: [CustomerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../shared/customer.service';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n\n  constructor(public customerService: CustomerService) { }\n  customerArray = [];\n  showDeleteMessage: boolean;\n  searchText = '';\n\n  ngOnInit(): void {\n    this.customerService.getCustomers().subscribe(\n      list => {\n        this.customerArray = list.map(item => {\n          return{\n            $key: item.key,\n            ...item.payload.val()\n          };\n        });\n      });\n    }\n\n    onDelete(key) {\n      if (confirm('Are you sure you want to delete ?')) {\n        this.customerService.deleteCustomer(key);\n        this.showDeleteMessage = true;\n        setTimeout(() => {\n          this.showDeleteMessage = false;\n        }, 3000);\n      }\n    }\n\n    filerCondition(customer) {\n      return customer.fullName.toLowerCase().indexOf(this.searchText.toLowerCase()) !== -1;\n    }\n  }\n\n","<form class=\"form-inline\">\n    <input class=\"form-control\" name=\"searchInput\" placeholder=\"Search\" #searchInput=\"ngModel\" [(ngModel)]=\"searchText\" style=\"width: 80%;\">\n    <button class=\"btn btn-outline-primary\" (click)=\"searchText=''\">X</button>\n</form>\n<table class=\"table table-sm\">\n    <thead>\n        <th>Full Name</th>\n        <th>Email</th>\n        <th>Mobile</th>\n        <th></th>\n    </thead>\n    <ng-container *ngFor='let customer of customerArray'>\n        <tr class=\"table-dark\" *ngIf='filerCondition(customer)'>\n            <td>{{customer.fullName}}</td>\n            <td>{{customer.email}}</td>\n            <td>{{customer.mobile}}</td>\n            <td>\n                <button class=\"btn btn-outline-info\" (click)='customerService.populateForm(customer)'>Edit</button>\n                <button class=\"btn btn-outline-danger\" (click)='onDelete(customer.$key)'>Delete</button>\n            </td>\n        </tr>\n    </ng-container>\n    <div class=\"alert alert-danger\" *ngIf=\"showDeleteMessage\">\n      Deleted successfully.\n    </div>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../shared/customer.service';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  constructor(public customerService: CustomerService) { }\n  submitted: boolean;\n  formControls = this.customerService.form.controls;\n  showSuccessMessage: boolean;\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.customerService.form.valid) {\n      if (this.customerService.form.get('$key').value == null) {\n        this.customerService.insertCustomer(this.customerService.form.value);\n      } else {\n        this.customerService.updateCustomer(this.customerService.form.value);\n      }\n      this.showSuccessMessage = true;\n      setTimeout(() => {\n        this.showSuccessMessage = false;\n      }, 3000);\n      this.submitted = false;\n      this.customerService.form.reset();\n      // this is to be done for proper reset operation\n      this.customerService.form.setValue({\n        $key: null,\n        fullName: '',\n        email: '',\n        mobile: '',\n        location: ''\n      });\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-5\">\n      <form [formGroup]=\"this.customerService.form\" (ngSubmit)=\"onSubmit()\">\n        <input type=\"hidden\" formControlName=\"$key\">\n        <div class=\"form-group\">\n          <label>Full Name</label>\n          <input formControlName=\"fullName\" class=\"form-control\" [ngClass]=\"{'is-invalid':submitted && formControls.fullName.errors}\">\n          <div class=\"invalid-feedback\" *ngIf=\"submitted && formControls.fullName.errors\">\n            This field is required.</div>\n        </div>\n        <div class=\"form-group\">\n          <label>Email</label>\n          <input formControlName=\"email\" class=\"form-control\" [ngClass]=\"{'is-invalid':submitted && formControls.email.errors}\">\n          <div class=\"invalid-feedback\" *ngIf=\"submitted && formControls.email.errors\">\n            Invalid email address.</div>\n        </div>\n        <div class=\"form-group\">\n          <label>Mobile</label>\n          <input formControlName=\"mobile\" class=\"form-control\" [ngClass]=\"{'is-invalid':submitted && formControls.mobile.errors}\">\n          <div class=\"invalid-feedback\" *ngIf=\"submitted && formControls.mobile.errors\">\n            <label *ngIf=\"formControls.mobile.errors.required\">This field is required.</label>\n            <label *ngIf=\"formControls.mobile.errors.minlength\">Atleast 4 numbers.</label>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label>Location</label>\n          <input formControlName=\"location\" class=\"form-control\">\n        </div>\n        <div class=\"form-group\">\n          <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n        </div>\n      </form>\n      <div class=\"alert alert-info\"  *ngIf=\"showSuccessMessage\">\n        Submitted successfully.\n      </div>\n    </div>\n    <div class=\"col-md-7\">\n      <app-customer-list></app-customer-list>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from 'src/app/shared/employee.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor(public employeeService: EmployeeService,\n              private toatsrService: ToastrService) { }\n\n    ngOnInit(): void {\n      this.resetForm();\n    }\n\n    onSubmit(form?: any) {\n      if (form.value.id == null) {\n        this.employeeService.addEmployee(form.value);\n      } else {\n        this.employeeService.updateEmployee(form.value.id, form.value);\n      }\n      this.resetForm();\n      this.toatsrService.success('employee added successfully', 'EMP. Register');\n    }\n\n    resetForm(form?: NgForm) {\n      if (form != null) {\n      form.resetForm();\n      }\n      this.employeeService.formData = {\n        id: null,\n        fullName: '',\n        position: '',\n        empCode: '',\n        mobile: '',\n      };\n    }\n\n  }\n\n","<h1 class=\"display-4\">EMP. Register</h1>\n<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n  <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"employeeService.formData.id\">\n\n  <div class=\"form-group\">\n    <input name=\"fullName\" #fullName=\"ngModel\" [(ngModel)]=\"employeeService.formData.fullName\" class=\"form-control\" placeholder=\"Full name\" required>\n    <div *ngIf=\"fullName.invalid && fullName.touched\" class=\"validation-error\">This field is required.</div>\n  </div>\n  \n  <div class=\"form-group\">\n    <input name=\"position\" #position=\"ngModel\" [(ngModel)]=\"employeeService.formData.position\" class=\"form-control\" placeholder=\"Position\">\n  </div>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <input name=\"empCode\" #empCode=\"ngModel\" [(ngModel)]=\"employeeService.formData.empCode\" class=\"form-control\" placeholder=\"Emp. code\">\n    </div>\n    <div class=\"form-group  col-md-6\">\n      <input name=\"mobile\" #mobile=\"ngModel\" [(ngModel)]=\"employeeService.formData.mobile\" class=\"form-control\" placeholder=\"Mobile\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn btn-lg btn-block btn-info\">SUBMIT</button>\n  </div>\n\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css']\n})\nexport class EmployeesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-5\">\n        <app-employee></app-employee>\n    </div>\n    <div class=\"col-md-7\">\n        <app-list-employee></app-list-employee>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../../shared/employee.service';\nimport { Employee } from '../../shared/employee.model';\n\n@Component({\n  selector: 'app-list-employee',\n  templateUrl: './list-employee.component.html',\n  styleUrls: ['./list-employee.component.css']\n})\nexport class ListEmployeeComponent implements OnInit {\n\n  list: Employee[];\n  constructor(private employeeService: EmployeeService) { }\n\n  ngOnInit(): void {\n    this.employeeService.getEmployees().subscribe(res => {\n      this.list = res.map(item => {\n        return {\n          id: item.payload.doc.id,\n          ...item.payload.doc.data() as Employee};\n      });\n    });\n  }\n\n  onEdit(employee: Employee) {\n    this.employeeService.formData = Object.assign({}, employee);\n  }\n\n  onDelete(employeeId) {\n    this.employeeService.deleteEmployee(employeeId);\n  }\n}\n","<table class=\"table table-hover\">\n    <thead>\n      <th>Name</th>\n      <th>Position</th>\n      <th>Mobile</th>\n      <th></th>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let emp of list\">\n        <td (click)=\"onEdit(emp)\">{{emp.empCode}} - {{emp.fullName}}</td>\n        <td (click)=\"onEdit(emp)\">{{emp.position}}</td>\n        <td (click)=\"onEdit(emp)\">{{emp.mobile}}</td>\n        <td><a class=\"btn text-danger\" (click)=\"onDelete(emp.id)\"><i class=\"fa fa-trash\"></i></a></td>\n      </tr>\n    </tbody>\n  </table>","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from 'src/app/shared/image.service';\n\n@Component({\n  selector: 'app-image-list',\n  templateUrl: './image-list.component.html',\n  styles: []\n})\nexport class ImageListComponent implements OnInit {\n\n  imageList: any[];\n  rowIndexArray: any[];\n\n  constructor(private imageService: ImageService) { }\n\n  ngOnInit(): void {\n    this.imageService.imageDetailList.snapshotChanges().subscribe(\n      list => {\n        this.imageList = list.map(item => item.payload.val());\n        this.rowIndexArray = Array.from(Array(Math.ceil(this.imageList.length / 3)).keys());\n      }\n    );\n  }\n\n}\n","<table *ngIf=\"imageList\">\n    <tr *ngFor=\"let i of rowIndexArray\">\n        <td>\n            <div class=\"imagebox\" *ngIf=\"i==0\">\n                <a routerLink=\"/image/upload\">\n                    <img src=\"assets/img/new_image.jpg\" class=\"img-fluid\">\n                </a>\n            </div>\n        </td>\n        <td>\n            <div class=\"imagebox\" *ngIf=\"i!=0\">\n                <img [src]=\"imageList[3*i].imageUrl\" class=\"img-fluid\">\n                <span class=\"imagebox-desc\">\n                    {{imageList[3*i].caption}}\n                </span>\n            </div>\n        </td>\n        <td>\n            <div class=\"imagebox\">\n                <img [src]=\"imageList[3*i + 1].imageUrl\" class=\"img-fluid\">\n                <span class=\"imagebox-desc\">\n                    {{imageList[3*i + 1].caption}}\n                </span>\n            </div>\n        </td>\n        <td>\n            <div class=\"imagebox\">\n                <img [src]=\"imageList[3*i + 2].imageUrl\" class=\"img-fluid\">\n                <span class=\"imagebox-desc\">\n                    {{imageList[3*i + 2].caption}}\n                </span>\n            </div>\n        </td>\n    </tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { ImageService } from 'src/app/shared/image.service';\nimport { finalize } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-image',\n  templateUrl: './image.component.html',\n  styles: []\n})\nexport class ImageComponent implements OnInit {\n\n  imgSrc: string;\n  selectedImage: any = null;\n  isSubmitted: boolean;\n\n  formTemplate = new FormGroup({\n    caption: new FormControl('', Validators.required),\n    category: new FormControl(''),\n    imageUrl: new FormControl('', Validators.required)\n  });\n  constructor(private storage: AngularFireStorage,\n              private imageService: ImageService,\n              private toatsrService: ToastrService) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n  }\n\n  showPreview(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (e: any) => this.imgSrc = e.target.result;\n      reader.readAsDataURL(event.target.files[0]);\n      this.selectedImage = event.target.files[0];\n    } else {\n      this.imgSrc = '/assets/img/image_placeholder.jpg';\n      this.selectedImage = null;\n    }\n  }\n\n  onSubmit(formValue) {\n    this.isSubmitted = true;\n    if (this.formTemplate.valid) {\n      const filePath = `${formValue.category}/${this.selectedImage.name.split('.').slice(0, -1).join('.')}_${new Date().getTime()}`;\n      const fileRef = this.storage.ref(filePath);\n      this.storage.upload(filePath, this.selectedImage).snapshotChanges().pipe(\n        finalize(() => {\n          fileRef.getDownloadURL().subscribe((url) => {\n            formValue.imageUrl = url;\n            this.imageService.insertImageDetails(formValue);\n            this.resetForm();\n            this.toatsrService.success('Image loaded successfully', 'Image App');\n          });\n        })\n      ).subscribe();\n    }\n  }\n\n  get formControls() {\n    return this.formTemplate.controls;\n  }\n\n  resetForm() {\n    this.formTemplate.reset();\n    this.formTemplate.setValue({\n      caption: '',\n      imageUrl: '',\n      category: 'Animal'\n    });\n    this.imgSrc = '/assets/img/image_placeholder.jpg';\n    this.selectedImage = null;\n    this.isSubmitted = false;\n  }\n}\n","<div class=\"card\" style=\"width:25rem\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"formTemplate\" (submit)=\"onSubmit(formTemplate.value)\">\n        <div class=\"text-center\">\n          <img [src]=\"imgSrc\" width=\"350px\" height=\"250px\" (click)=\"fileUploader.click()\">\n        </div>\n        <div class=\"form-group\">\n          <label>Select file to upload</label>\n          <input type=\"file\" accept=\"image/*\" class=\"form-control\" #fileUploader formControlName=\"imageUrl\"\n            (change)=\"showPreview($event)\">\n          <div class=\"text-danger\" *ngIf=\"isSubmitted && formControls.imageUrl.errors?.required\">This field is required.\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <input class=\"form-control\" formControlName=\"caption\" placeholder=\"Caption\">\n          <div class=\"text-danger\" *ngIf=\"isSubmitted && formControls.caption.errors?.required\">This field is required.\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <select formControlName=\"category\" class=\"form-control\">\n            <option value=\"Resto\" selected>Resto</option>\n            <option value=\"Test\">Test</option>\n          </select>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <a routerLink=\"/image/list\" class=\"btn btn-primary btn-block float-right\">Go To Gallery</a>\n          </div>\n          <div class=\"form-group col-md-6\">\n            <button type=\"submit\" class=\"btn btn-success btn-block float-right\">Submit</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from '../shared/image.service';\n\n@Component({\n  selector: 'app-images',\n  templateUrl: './images.component.html',\n  styles: []\n})\nexport class ImagesComponent implements OnInit {\n\n  constructor(private imageService: ImageService) { }\n\n  ngOnInit(): void {\n    this.imageService.getImageDetailList();\n  }\n\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-8 offset-md-2\">\n      <blockquote class=\"blockquote\">\n        <p class=\"mb-0 h3 display-4\">Image Gallery</p>\n        <footer class=\"blockquote-footer\">with <cite title=\"Source Title\">Firebase Storage</cite> and <cite\n            title=\"Source Title\">Angular 7</cite></footer>\n      </blockquote>\n      <router-outlet></router-outlet>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private firebase: AngularFireDatabase) {}\n  customerList: AngularFireList<any>;\n\n  form = new FormGroup({\n    $key: new FormControl(null),\n    fullName: new FormControl('', Validators.required),\n    email: new FormControl('', Validators.email),\n    mobile: new FormControl('', [Validators.required, Validators.minLength(4)]),\n    location: new FormControl(''),\n  });\n\n  getCustomers() {\n    this.customerList = this.firebase.list('customers');\n    return this.customerList.snapshotChanges();\n  }\n\n  insertCustomer(customer) {\n    this.customerList.push({\n      fullName: customer.fullName,\n      email: customer.email,\n      mobile: customer.mobile,\n      location: customer.location\n    });\n  }\n\n  populateForm(customer) {\n    this.form.setValue(customer);\n  }\n\n  updateCustomer(customer) {\n    this.customerList.update(customer.$key, {\n      fullName: customer.fullName,\n      email: customer.email,\n      mobile: customer.mobile,\n      location: customer.location\n    });\n  }\n\n  deleteCustomer(customerKey) {\n      this.customerList.remove(customerKey);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Employee } from './employee.model';\nimport { AngularFirestore } from 'angularfire2/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  formData: Employee;\n\n  constructor(private firestore: AngularFirestore) { }\n\n  addEmployee(emp: Employee) {\n    this.firestore.collection('employee').add(emp);\n  }\n\n  updateEmployee(id: string, emp: Employee) {\n    this.firestore.doc('employee/' + id).update(emp);\n  }\n\n  getEmployees() {\n    return this.firestore.collection('employee').snapshotChanges();\n  }\n\n  deleteEmployee(employeeId: string) {\n    this.firestore.doc('employee/' + employeeId).delete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  imageDetailList: AngularFireList<any>;\n\n  constructor(private firebase: AngularFireDatabase) { }\n\n  getImageDetailList() {\n    this.imageDetailList = this.firebase.list('imageDetails');\n  }\n\n  insertImageDetails(imageDetails) {\n    this.imageDetailList.push(imageDetails);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  toDoList: AngularFireList<any>;\n  constructor(private firebasedb: AngularFireDatabase) { }\n\n  getToDoList() {\n    this.toDoList = this.firebasedb.list('titles');\n    return this.toDoList;\n  }\n\n  addTitle(title: string) {\n    this.toDoList.push({\n      title,\n      isChecked: false\n    });\n  }\n\n  checkTitle($key: string, flag: boolean) {\n    this.toDoList.update($key, {isChecked: flag});\n  }\n\n  removeTitle($key: string) {\n    this.toDoList.remove($key);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TodoService } from '../shared/todo.service';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css'],\n  providers: [TodoService]\n})\nexport class TodoComponent implements OnInit {\n\n  todoListArray: any[];\n  constructor(private todoService: TodoService) { }\n\n  ngOnInit(): void {\n    this.todoService.getToDoList().snapshotChanges()\n    .subscribe(item => {\n      this.todoListArray = [];\n      item.forEach(element => {\n        const x = element.payload.toJSON();\n        // x.$key = element.key;\n        this.todoListArray.push(x);\n      });\n      // sort array\n      this.todoListArray.sort((a, b) => {\n        return a.isChecked - b.isChecked;\n      });\n    });\n  }\n\n  onAdd(itemTitle) {\n    this.todoService.addTitle(itemTitle.value);\n    itemTitle.value = null;\n  }\n\n  alterCheck($key: string, isChecked) {\n    this.todoService.checkTitle($key, !isChecked);\n\n  }\n\n  onDelete($key: string) {\n    this.todoService.removeTitle($key);\n  }\n\n}\n","<div class=\"jumbotron\" style=\"padding: 45px 0px;\">\n    <h4 class=\"text-center\">To List app</h4>\n</div>\n\n<div class=\"input-group\">\n    <input type=\"text\" class=\"form-control\" #itemTitle>\n    <div class=\"input-group-addon hover-cursor\" (click) = \"onAdd(itemTitle)\">\n        <i class=\"fa fa-plus-circle fa-2x\"></i>\n    </div>\n</div>\n\n<div style=\"margin: 5px 0px;\">\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\" *ngFor='let item of todoListArray'>\n            <span class=\"hover-cursor\" [class.text-success]='item.isChecked' \n                    (click)='alterCheck(item.$key,item.isChecked)'>\n                <i class=\"fa fa-lg\" [ngClass]=\"item.isChecked?'fa-check-circle-o':'fa-circle-thin'\"></i>\n            </span>\n            {{item.title}}\n            <span class=\"hover-cursor text-danger pull-right\" (click)='onDelete(item.$key)'>\n                <i class=\"fa fa-trash-o fa-lg\"></i>\n            </span>\n        </li>\n    </ul>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyDPuS2ce36h2inBI5q6SJ8_hb65zeKc_WQ',\n    authDomain: 'fir-crudapp-853ac.firebaseapp.com',\n    databaseURL: 'https://fir-crudapp-853ac.firebaseio.com',\n    projectId: 'fir-crudapp-853ac',\n    storageBucket: 'fir-crudapp-853ac.appspot.com',\n    messagingSenderId: '18860355469',\n    appId: '1:18860355469:web:e306d579fab077b4c757c4',\n    measurementId: 'G-D2BMR3FJGM'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}