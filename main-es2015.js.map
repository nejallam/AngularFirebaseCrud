{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/customer-list/customer-list.component.ts","./src/app/customer-list/customer-list.component.html","./src/app/customer/customer.component.ts","./src/app/customer/customer.component.html","./src/app/employees/employee/employee.component.ts","./src/app/employees/employee/employee.component.html","./src/app/employees/employees.component.ts","./src/app/employees/employees.component.html","./src/app/employees/list-employee/list-employee.component.ts","./src/app/employees/list-employee/list-employee.component.html","./src/app/images/image-list/image-list.component.ts","./src/app/images/image-list/image-list.component.html","./src/app/images/image/image.component.ts","./src/app/images/image/image.component.html","./src/app/images/images.component.ts","./src/app/images/images.component.html","./src/app/shared/customer.service.ts","./src/app/shared/employee.service.ts","./src/app/shared/image.service.ts","./src/app/shared/todo.service.ts","./src/app/todo/todo.component.ts","./src/app/todo/todo.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACe;AACW;AACZ;AACe;AACT;AACI;AACc;;;AAG9E,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,cAAc,EAAE,SAAS,EAAE,MAAM,EAAC;IACzD,EAAC,IAAI,EAAG,OAAO,EAAE,SAAS,EAAE,wEAAe,EAAE,QAAQ,EAAE;YACrD,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,4EAAc,EAAC;YAC3C,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,0FAAkB,EAAC;SAC9C,EAAC;IACF,EAAC,IAAI,EAAG,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;IACjD,EAAC,IAAI,EAAG,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;IACzC,EAAC,IAAI,EAAG,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAC;CACpD,CAAC;AASK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBANlB;YACP,4DAAY;YACZ,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;SAC7B;QACS,4DAAY;mIAEX,gBAAgB,cALzB,4DAAY,2EAGJ,4DAAY;6FAEX,gBAAgB;cAP5B,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;iBAC7B;gBACD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEACE;QAAA,4EAAkD;QAAA,gEAAK;QAAA,4DAAS;QAChE,4EAAsD;QAAA,mEAAQ;QAAA,4DAAS;QACvE,4EAAuD;QAAA,oEAAS;QAAA,4DAAS;QACzE,4EAAmD;QAAA,iEAAM;QAAA,4DAAS;QACpE,4DAAM;QACN,yEACE;QAAA,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,4EAA+B;QACjC,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;6FDPO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACyB;AACa;AAE/E,oDAAoD;AACpD,qEAAqE;AACrE,mEAAmE;AACnE,8DAA8D;AAEZ;AACe;AACE;AAEzB;AACK;AACmB;AACc;AACpB;AACF;AACJ;AACE;AACa;AACO;AACc;AAC9B;AACI;AACc;;;;AAgCvE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,yEAAe,CAAC,YAdnB;YACP,uEAAa;YACb,kEAAmB;YACnB,+DAAiB,CAAC,aAAa,CAAC,sEAAW,CAAC,cAAc,CAAC;YAC3D,gFAAyB;YACzB,8EAAwB;YACxB,0DAAW;YACX,qEAAgB;YAChB,4FAAuB;YACvB,uDAAY,CAAC,OAAO,EAAE;YACtB,8EAAwB;YACxB,gFAAyB;SAC1B;mIAKU,SAAS,mBA5BlB,2DAAY;QACZ,8EAAiB;QACjB,6FAAqB;QACrB,mEAAa;QACb,yFAAiB;QACjB,uGAAqB;QACrB,kFAAkB;QAClB,yEAAe;QACf,6EAAc;QACd,2FAAkB,aAGlB,uEAAa;QACb,kEAAmB,mEAEnB,gFAAyB;QACzB,8EAAwB;QACxB,0DAAW;QACX,qEAAgB;QAChB,4FAAuB,2DAEvB,8EAAwB;QACxB,gFAAyB;6FAMhB,SAAS;cA9BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,8EAAiB;oBACjB,6FAAqB;oBACrB,mEAAa;oBACb,yFAAiB;oBACjB,uGAAqB;oBACrB,kFAAkB;oBAClB,yEAAe;oBACf,6EAAc;oBACd,2FAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,kEAAmB;oBACnB,+DAAiB,CAAC,aAAa,CAAC,sEAAW,CAAC,cAAc,CAAC;oBAC3D,gFAAyB;oBACzB,8EAAwB;oBACxB,0DAAW;oBACX,qEAAgB;oBAChB,4FAAuB;oBACvB,uDAAY,CAAC,OAAO,EAAE;oBACtB,8EAAwB;oBACxB,gFAAyB;iBAC1B;gBACD,eAAe,EAAE,CAAC,8EAAiB,CAAC;gBACpC,SAAS,EAAE,CAAC,yEAAe,CAAC;gBAC5B,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC1DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICY1C,wEACI;IAAA,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEACI;IAAA,4EAAsF;IAAjD,iZAAS,iDAAsC,IAAC;IAAC,+DAAI;IAAA,4DAAS;IACnG,8EAAyE;IAAlC,wbAAiC;IAAC,kEAAM;IAAA,4DAAS;IAC5F,4DAAK;IACT,4DAAK;;;IAPG,0DAAqB;IAArB,qFAAqB;IACrB,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAmB;IAAnB,mFAAmB;;;IAJ/B,wEACI;IAAA,gIACI;IAQR,qEAAe;;;;IATY,0DAAgC;IAAhC,oGAAgC;;;IAU3D,0EACE;IAAA,kFACF;IAAA,4DAAM;;ADhBH,MAAM,qBAAqB;IAEhC,YAAmB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QACnD,kBAAa,GAAG,EAAE,CAAC;QAEnB,eAAU,GAAG,EAAE,CAAC;IAHuC,CAAC;IAKxD,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAC3C,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBACnC,uBACE,IAAI,EAAE,IAAI,CAAC,GAAG,IACX,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EACrB;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,GAAG;QACV,IAAI,OAAO,CAAC,mCAAmC,CAAC,EAAE;YAChD,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YACjC,CAAC,EAAE,IAAI,CAAC,CAAC;SACV;IACH,CAAC;IAED,cAAc,CAAC,QAAQ;QACrB,OAAO,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACvF,CAAC;;0FA/BQ,qBAAqB;qGAArB,qBAAqB;QCRlC,0EACI;QAAA,8EACA;QAD2F,6LAAwB;QAAnH,4DACA;QAAA,4EAAgE;QAAxB,8JAAoB,EAAE,IAAC;QAAC,4DAAC;QAAA,4DAAS;QAC9E,4DAAO;QACP,2EACI;QAAA,wEACI;QAAA,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,qEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,iEAAS;QACb,4DAAQ;QACR,qIACI;QAUJ,mHACE;QAEN,4DAAQ;;QAxBuF,0DAAwB;QAAxB,mFAAwB;QAUrG,2DAAsC;QAAtC,sFAAsC;QAWpB,0DAAyB;QAAzB,uFAAyB;;6FDdhD,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICOxC,0EACE;IAAA,mFAAuB;IAAA,4DAAM;;;IAK/B,0EACE;IAAA,kFAAsB;IAAA,4DAAM;;;IAM5B,wEAAmD;IAAA,kFAAuB;IAAA,4DAAQ;;;IAClF,wEAAoD;IAAA,6EAAkB;IAAA,4DAAQ;;;IAFhF,0EACE;IAAA,yHAAmD;IACnD,yHAAoD;IACtD,4DAAM;;;IAFG,0DAA2C;IAA3C,4GAA2C;IAC3C,0DAA4C;IAA5C,6GAA4C;;;IAWzD,0EACE;IAAA,oFACF;IAAA,4DAAM;;;AD1BL,MAAM,iBAAiB;IAE5B,YAAmB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAEnD,iBAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC;IAFK,CAAC;IAKxD,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE;YACnC,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,IAAI,IAAI,EAAE;gBACvD,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACtE;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACtE;YACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAClC,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAClC,gDAAgD;YAChD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACjC,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,EAAE;gBACZ,KAAK,EAAE,EAAE;gBACT,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;aACb,CAAC,CAAC;SACJ;IACH,CAAC;;kFAlCU,iBAAiB;iGAAjB,iBAAiB;QCR9B,yEACI;QAAA,yEACE;QAAA,0EACE;QAD4C,6IAAY,cAAU,IAAC;QACnE,sEACA;QAAA,yEACE;QAAA,wEAAO;QAAA,oEAAS;QAAA,4DAAQ;QACxB,sEACA;QAAA,6GACE;QACJ,4DAAM;QACN,yEACE;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,uEACA;QAAA,+GACE;QACJ,4DAAM;QACN,0EACE;QAAA,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QACrB,uEACA;QAAA,+GACE;QAGJ,4DAAM;QACN,0EACE;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,uEACF;QAAA,4DAAM;QACN,0EACE;QAAA,wEACF;QAAA,4DAAM;QACR,4DAAO;QACP,gHACE;QAEJ,4DAAM;QACN,2EACE;QAAA,gFAAuC;QACzC,4DAAM;QACR,4DAAM;;QArCI,0DAAuC;QAAvC,+FAAuC;QAIc,0DAAoE;QAApE,6LAAoE;QAC7F,0DAAiD;QAAjD,mHAAiD;QAK3B,0DAAiE;QAAjE,2LAAiE;QACvF,0DAA8C;QAA9C,gHAA8C;QAKvB,0DAAkE;QAAlE,4LAAkE;QACzF,0DAA+C;QAA/C,iHAA+C;QAalD,0DAA0B;QAA1B,wFAA0B;;6FDxBlD,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICM9C,0EAA2E;IAAA,kFAAuB;IAAA,4DAAM;;ADIrG,MAAM,iBAAiB;IAE5B,YAAmB,eAAgC,EAC/B,aAA4B;QAD7B,oBAAe,GAAf,eAAe,CAAiB;QAC/B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAEnD,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,QAAQ,CAAC,IAAU;QACjB,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9C;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAChE;QACD,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,6BAA6B,EAAE,eAAe,CAAC,CAAC;IAC7E,CAAC;IAED,SAAS,CAAC,IAAa;QACrB,IAAI,IAAI,IAAI,IAAI,EAAE;YAClB,IAAI,CAAC,SAAS,EAAE,CAAC;SAChB;QACD,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG;YAC9B,EAAE,EAAE,IAAI;YACR,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;SACX,CAAC;IACJ,CAAC;;kFA9BQ,iBAAiB;iGAAjB,iBAAiB;;QCV9B,wEAAsB;QAAA,wEAAa;QAAA,4DAAK;QACxC,6EACE;QADsC,uRAAU,kBAAc,IAAC;QAC/D,8EAEA;QAF6C,0MAAyC;QAAtF,4DAEA;QAAA,yEACE;QAAA,8EACA;QAD2C,gNAA+C;QAA1F,4DACA;QAAA,6GAA2E;QAC7E,4DAAM;QAEN,0EACE;QAAA,gFACF;QAD6C,iNAA+C;QAA1F,4DACF;QAAA,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,iFACF;QAD2C,gNAA8C;QAAvF,4DACF;QAAA,4DAAM;QACN,2EACE;QAAA,iFACF;QADyC,+MAA6C;QAApF,4DACF;QAAA,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,8EAAsF;QAAA,kEAAM;QAAA,4DAAS;QACvG,4DAAM;QAER,4DAAO;;;;QAtBwC,0DAAyC;QAAzC,oGAAyC;QAGzC,0DAA+C;QAA/C,0GAA+C;QACrF,0DAA4C;QAA5C,8FAA4C;QAIN,0DAA+C;QAA/C,0GAA+C;QAI/C,0DAA8C;QAA9C,yGAA8C;QAGhD,0DAA6C;QAA7C,wGAA6C;QAIhE,0DAAyB;QAAzB,kFAAyB;;6FDXtC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,kBAAkB;IAE7B;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCP/B,yEACI;QAAA,yEACI;QAAA,0EAA6B;QACjC,4DAAM;QACN,yEACI;QAAA,+EAAuC;QAC3C,4DAAM;QACV,4DAAM;;6FDAO,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICQ5C,qEACE;IAAA,wEAA0B;IAAtB,2VAAqB;IAAC,uDAAkC;IAAA,4DAAK;IACjE,wEAA0B;IAAtB,2VAAqB;IAAC,uDAAgB;IAAA,4DAAK;IAC/C,wEAA0B;IAAtB,2VAAqB;IAAC,uDAAc;IAAA,4DAAK;IAC7C,qEAAI;IAAA,uEAAsD;IAA3B,+VAA0B;IAAC,kEAA2B;IAAA,4DAAI;IAAA,4DAAK;IAChG,4DAAK;;;IAJuB,0DAAkC;IAAlC,kHAAkC;IAClC,0DAAgB;IAAhB,iFAAgB;IAChB,0DAAc;IAAd,+EAAc;;ADFzC,MAAM,qBAAqB;IAGhC,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAEzD,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAClD,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBACzB,uBACE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAc,EAAE;YAC5C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,QAAkB;QACvB,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED,QAAQ,CAAC,UAAU;QACjB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;IAClD,CAAC;;0FArBU,qBAAqB;qGAArB,qBAAqB;QCTlC,2EACI;QAAA,wEACE;QAAA,qEAAI;QAAA,+DAAI;QAAA,4DAAK;QACb,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QACjB,qEAAI;QAAA,iEAAM;QAAA,4DAAK;QACf,gEAAS;QACX,4DAAQ;QACR,wEACE;QAAA,kHACE;QAKJ,4DAAQ;QACV,4DAAQ;;QAPA,2DAAwB;QAAxB,6EAAwB;;6FDCrB,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICGtC,yEACI;IAAA,uEACI;IAAA,oEACJ;IAAA,4DAAI;IACR,4DAAM;;;IAGN,yEACI;IAAA,oEACA;IAAA,0EACI;IAAA,uDACJ;IAAA,4DAAO;IACX,4DAAM;;;;IAJG,0DAA+B;IAA/B,mKAA+B;IAEhC,0DACJ;IADI,gHACJ;;;IAbZ,qEACI;IAAA,qEACI;IAAA,2HACI;IAIR,4DAAK;IACL,qEACI;IAAA,2HACI;IAKR,4DAAK;IACL,qEACI;IAAA,yEACI;IAAA,oEACA;IAAA,0EACI;IAAA,uDACJ;IAAA,4DAAO;IACX,4DAAM;IACV,4DAAK;IACL,sEACI;IAAA,0EACI;IAAA,qEACA;IAAA,2EACI;IAAA,wDACJ;IAAA,4DAAO;IACX,4DAAM;IACV,4DAAK;IACT,4DAAK;;;;IA9ByB,0DAAY;IAAZ,4EAAY;IAOZ,0DAAY;IAAZ,4EAAY;IASzB,0DAAmC;IAAnC,uKAAmC;IAEpC,0DACJ;IADI,oHACJ;IAKK,0DAAmC;IAAnC,uKAAmC;IAEpC,0DACJ;IADI,oHACJ;;;IA9BhB,wEACI;IAAA,qHACI;IAgCR,4DAAQ;;;IAjCA,0DAA+B;IAA/B,0FAA+B;;ADOhC,MAAM,kBAAkB;IAK7B,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnD,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAC3D,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;YACtD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QACtF,CAAC,CACF,CAAC;IACJ,CAAC;;oFAdU,kBAAkB;kGAAlB,kBAAkB;QCR/B,kHACI;;QADG,+EAAiB;;6FDQX,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,MAAM,EAAE,EAAE;aACX;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAG1B;;;;;;;;;ICMhC,0EAAuF;IAAA,mFACvF;IAAA,4DAAM;;;IAIN,0EAAsF;IAAA,mFACtF;IAAA,4DAAM;;ADJT,MAAM,cAAc;IAWzB,YAAoB,OAA2B,EAC3B,YAA0B,EAC1B,aAA4B;QAF5B,YAAO,GAAP,OAAO,CAAoB;QAC3B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAVhD,kBAAa,GAAQ,IAAI,CAAC;QAG1B,iBAAY,GAAG,IAAI,wDAAS,CAAC;YAC3B,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;IAGiD,CAAC;IAErD,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,WAAW,CAAC,KAAU;QACpB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC/C,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAChC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YAC1D,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAC5C;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,mCAAmC,CAAC;YAClD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAED,QAAQ,CAAC,SAAS;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC3B,MAAM,QAAQ,GAAG,GAAG,SAAS,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC;YAC9H,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,eAAe,EAAE,CAAC,IAAI,CACtE,+DAAQ,CAAC,GAAG,EAAE;gBACZ,OAAO,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;oBACzC,SAAS,CAAC,QAAQ,GAAG,GAAG,CAAC;oBACzB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;oBAChD,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,2BAA2B,EAAE,WAAW,CAAC,CAAC;gBACvE,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CACH,CAAC,SAAS,EAAE,CAAC;SACf;IACH,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;IACpC,CAAC;IAED,SAAS;QACP,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YACzB,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,mCAAmC,CAAC;QAClD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;;4EA/DU,cAAc;8FAAd,cAAc;;QCZ3B,yEACI;QAAA,yEACE;QAAA,0EACE;QAD+B,sIAAU,oCAA4B,IAAC;QACtE,yEACE;QAAA,yEACF;QADmD,iRAAS,YAAoB,IAAC;QAA/E,4DACF;QAAA,4DAAM;QACN,yEACE;QAAA,wEAAO;QAAA,gFAAqB;QAAA,4DAAQ;QACpC,8EAEA;QADE,6IAAU,uBAAmB,IAAC;QADhC,4DAEA;QAAA,4GAAuF;QAEzF,4DAAM;QACN,0EACE;QAAA,uEACA;QAAA,4GAAsF;QAExF,4DAAM;QACN,0EACE;QAAA,8EACE;QAAA,8EAA+B;QAAA,iEAAK;QAAA,4DAAS;QAC7C,8EAAqB;QAAA,gEAAI;QAAA,4DAAS;QACpC,4DAAS;QACX,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,yEAA0E;QAAA,yEAAa;QAAA,4DAAI;QAC7F,4DAAM;QACN,2EACE;QAAA,8EAAoE;QAAA,kEAAM;QAAA,4DAAS;QACrF,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;;QAhCI,0DAA0B;QAA1B,uFAA0B;QAEvB,0DAAc;QAAd,wIAAc;QAMM,0DAA6D;QAA7D,kLAA6D;QAK7D,0DAA4D;QAA5D,gLAA4D;;6FDHlF,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,MAAM,EAAE,EAAE;aACX;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,eAAe;IAE1B,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnD,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;IACzC,CAAC;;8EANU,eAAe;+FAAf,eAAe;QCR5B,yEACI;QAAA,yEACE;QAAA,gFACE;QAAA,uEAA6B;QAAA,wEAAa;QAAA,4DAAI;QAC9C,4EAAkC;QAAA,gEAAK;QAAA,0EAA2B;QAAA,2EAAgB;QAAA,4DAAO;QAAC,gEAAI;QAAA,2EACrE;QAAA,qEAAS;QAAA,4DAAO;QAAA,4DAAS;QACpD,4DAAa;QACb,4EAA+B;QACjC,4DAAM;QACR,4DAAM;;6FDDK,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,MAAM,EAAE,EAAE;aACX;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACyB;;;AAM7D,MAAM,eAAe;IAE1B,YAAoB,QAA6B;QAA7B,aAAQ,GAAR,QAAQ,CAAqB;QAGjD,SAAI,GAAG,IAAI,wDAAS,CAAC;YACnB,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC3B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,KAAK,CAAC;YAC5C,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3E,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC9B,CAAC,CAAC;IATiD,CAAC;IAWrD,YAAY;QACV,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;IAC7C,CAAC;IAED,cAAc,CAAC,QAAQ;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACrB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,MAAM,EAAE,QAAQ,CAAC,MAAM;YACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;SAC5B,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,QAAQ;QACnB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IAED,cAAc,CAAC,QAAQ;QACrB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;YACtC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,MAAM,EAAE,QAAQ,CAAC,MAAM;YACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;SAC5B,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,WAAW;QACtB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAC1C,CAAC;;8EA1CU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,eAAe;IAG1B,YAAoB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;IAAI,CAAC;IAEpD,WAAW,CAAC,GAAa;QACvB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjD,CAAC;IAED,cAAc,CAAC,EAAU,EAAE,GAAa;QACtC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACnD,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;IACjE,CAAC;IAED,cAAc,CAAC,UAAkB;QAC/B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,GAAG,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC;IACxD,CAAC;;8EAnBU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,YAAY;IAIvB,YAAoB,QAA6B;QAA7B,aAAQ,GAAR,QAAQ,CAAqB;IAAI,CAAC;IAEtD,kBAAkB;QAChB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC5D,CAAC;IAED,kBAAkB,CAAC,YAAY;QAC7B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;;wEAZU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,WAAW;IAGtB,YAAoB,UAA+B;QAA/B,eAAU,GAAV,UAAU,CAAqB;IAAI,CAAC;IAExD,WAAW;QACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACjB,KAAK;YACL,SAAS,EAAE,KAAK;SACjB,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,IAAY,EAAE,IAAa;QACpC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;IAChD,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;;sEAvBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAkD;AACG;;;;;;ICY7C,yEACI;IAAA,2EAEI;IADI,oXAA8C;IAClD,mEAAwF;IAC5F,4DAAO;IACP,uDACA;IAAA,2EACI;IAD8C,8VAA6B;IAC3E,mEAAmC;IACvC,4DAAO;IACX,4DAAK;;;IAR0B,0DAAqC;IAArC,6FAAqC;IAExC,0DAA+D;IAA/D,gIAA+D;IAEvF,0DACA;IADA,0FACA;;ADVL,MAAM,aAAa;IAGxB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,eAAe,EAAE;aAC/C,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACrB,MAAM,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;gBACnC,wBAAwB;gBACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;YACH,aAAa;YACb,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC/B,OAAO,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;YACnC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,SAAS;QACb,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC3C,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,UAAU,CAAC,IAAY,EAAE,SAAS;QAChC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC;IAEhD,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;;0EAjCU,aAAa;6FAAb,aAAa,yGAFb,CAAC,gEAAW,CAAC;;QCP1B,yEACI;QAAA,wEAAwB;QAAA,sEAAW;QAAA,4DAAK;QAC5C,4DAAM;QAEN,yEACI;QAAA,yEACA;QAAA,yEACI;QADwC,gRAAW,eAAgB,IAAC;QACpE,kEAAuC;QAC3C,4DAAM;QACV,4DAAM;QAEN,yEACI;QAAA,wEACI;QAAA,yGACI;QASR,4DAAK;QACT,4DAAM;;QAX8B,2DAAkC;QAAlC,sFAAkC;;6FDJzD,aAAa;cANzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;gBACnC,SAAS,EAAE,CAAC,gEAAW,CAAC;aACzB;;;;;;;;;;;;;;AERD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,cAAc,EAAE;QACd,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,mCAAmC;QAC/C,WAAW,EAAE,0CAA0C;QACvD,SAAS,EAAE,mBAAmB;QAC9B,aAAa,EAAE,+BAA+B;QAC9C,iBAAiB,EAAE,aAAa;QAChC,KAAK,EAAE,0CAA0C;QACjD,aAAa,EAAE,cAAc;KAC9B;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACzBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule} from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomerComponent } from './customer/customer.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { ImagesComponent } from './images/images.component';\nimport { ImageComponent } from './images/image/image.component';\nimport { ImageListComponent } from './images/image-list/image-list.component';\n\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'image/upload', pathMatch: 'full'},\n  {path : 'image', component: ImagesComponent, children: [\n    {path: 'upload', component: ImageComponent},\n    {path: 'list', component: ImageListComponent}\n  ]},\n  {path : 'customer', component: CustomerComponent},\n  {path : 'todo', component: TodoComponent},\n  {path : 'employees', component: EmployeesComponent}\n];\n\n@NgModule({\n  imports: [\n    RouterModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular7';\n}\n","<nav color=\"secondary\">\n  <button class=\"btn\" mat-button routerLink=\"/todo\">To Do</button>\n  <button class=\"btn\" mat-button routerLink=\"/customer\">Customer</button>  \n  <button class=\"btn\" mat-button routerLink=\"/employees\">Employees</button>\n  <button class=\"btn\" mat-button routerLink=\"/image\">Images</button>\n</nav>\n<div class=\"jumbotron jumbtron-fluid\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// import { AngularFireModule } from \"angularfire2\";\n// import { AngularFireDatabaseModule } from \"angularfire2/database\";\n// import { AngularFirestoreModule } from \"angularfire2/firestore\";\n// import { AngularFirestore } from \"@angular/fire/firestore\";\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { AppComponent } from './app.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerService } from './shared/customer.service';\nimport { environment } from '../environments/environment';\nimport { TodoComponent } from './todo/todo.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { EmployeeComponent } from './employees/employee/employee.component';\nimport { ListEmployeeComponent } from './employees/list-employee/list-employee.component';\nimport { ImagesComponent } from './images/images.component';\nimport { ImageComponent } from './images/image/image.component';\nimport { ImageListComponent } from './images/image-list/image-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomerComponent,\n    CustomerListComponent,\n    TodoComponent,\n    EmployeeComponent,\n    ListEmployeeComponent,\n    EmployeesComponent,\n    ImagesComponent,\n    ImageComponent,\n    ImageListComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,\n    AngularFireStorageModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    AngularFireStorageModule,\n    AngularFireDatabaseModule\n  ],\n  entryComponents: [CustomerComponent],\n  providers: [CustomerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../shared/customer.service';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n\n  constructor(public customerService: CustomerService) { }\n  customerArray = [];\n  showDeleteMessage: boolean;\n  searchText = '';\n\n  ngOnInit(): void {\n    this.customerService.getCustomers().subscribe(\n      list => {\n        this.customerArray = list.map(item => {\n          return{\n            $key: item.key,\n            ...item.payload.val()\n          };\n        });\n      });\n    }\n\n    onDelete(key) {\n      if (confirm('Are you sure you want to delete ?')) {\n        this.customerService.deleteCustomer(key);\n        this.showDeleteMessage = true;\n        setTimeout(() => {\n          this.showDeleteMessage = false;\n        }, 3000);\n      }\n    }\n\n    filerCondition(customer) {\n      return customer.fullName.toLowerCase().indexOf(this.searchText.toLowerCase()) !== -1;\n    }\n  }\n\n","<form class=\"form-inline\">\n    <input class=\"form-control\" name=\"searchInput\" placeholder=\"Search\" #searchInput=\"ngModel\" [(ngModel)]=\"searchText\" style=\"width: 80%;\">\n    <button class=\"btn btn-outline-primary\" (click)=\"searchText=''\">X</button>\n</form>\n<table class=\"table table-sm\">\n    <thead>\n        <th>Full Name</th>\n        <th>Email</th>\n        <th>Mobile</th>\n        <th></th>\n    </thead>\n    <ng-container *ngFor='let customer of customerArray'>\n        <tr class=\"table-dark\" *ngIf='filerCondition(customer)'>\n            <td>{{customer.fullName}}</td>\n            <td>{{customer.email}}</td>\n            <td>{{customer.mobile}}</td>\n            <td>\n                <button class=\"btn btn-outline-info\" (click)='customerService.populateForm(customer)'>Edit</button>\n                <button class=\"btn btn-outline-danger\" (click)='onDelete(customer.$key)'>Delete</button>\n            </td>\n        </tr>\n    </ng-container>\n    <div class=\"alert alert-danger\" *ngIf=\"showDeleteMessage\">\n      Deleted successfully.\n    </div>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../shared/customer.service';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  constructor(public customerService: CustomerService) { }\n  submitted: boolean;\n  formControls = this.customerService.form.controls;\n  showSuccessMessage: boolean;\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.customerService.form.valid) {\n      if (this.customerService.form.get('$key').value == null) {\n        this.customerService.insertCustomer(this.customerService.form.value);\n      } else {\n        this.customerService.updateCustomer(this.customerService.form.value);\n      }\n      this.showSuccessMessage = true;\n      setTimeout(() => {\n        this.showSuccessMessage = false;\n      }, 3000);\n      this.submitted = false;\n      this.customerService.form.reset();\n      // this is to be done for proper reset operation\n      this.customerService.form.setValue({\n        $key: null,\n        fullName: '',\n        email: '',\n        mobile: '',\n        location: ''\n      });\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-5\">\n      <form [formGroup]=\"this.customerService.form\" (ngSubmit)=\"onSubmit()\">\n        <input type=\"hidden\" formControlName=\"$key\">\n        <div class=\"form-group\">\n          <label>Full Name</label>\n          <input formControlName=\"fullName\" class=\"form-control\" [ngClass]=\"{'is-invalid':submitted && formControls.fullName.errors}\">\n          <div class=\"invalid-feedback\" *ngIf=\"submitted && formControls.fullName.errors\">\n            This field is required.</div>\n        </div>\n        <div class=\"form-group\">\n          <label>Email</label>\n          <input formControlName=\"email\" class=\"form-control\" [ngClass]=\"{'is-invalid':submitted && formControls.email.errors}\">\n          <div class=\"invalid-feedback\" *ngIf=\"submitted && formControls.email.errors\">\n            Invalid email address.</div>\n        </div>\n        <div class=\"form-group\">\n          <label>Mobile</label>\n          <input formControlName=\"mobile\" class=\"form-control\" [ngClass]=\"{'is-invalid':submitted && formControls.mobile.errors}\">\n          <div class=\"invalid-feedback\" *ngIf=\"submitted && formControls.mobile.errors\">\n            <label *ngIf=\"formControls.mobile.errors.required\">This field is required.</label>\n            <label *ngIf=\"formControls.mobile.errors.minlength\">Atleast 4 numbers.</label>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label>Location</label>\n          <input formControlName=\"location\" class=\"form-control\">\n        </div>\n        <div class=\"form-group\">\n          <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n        </div>\n      </form>\n      <div class=\"alert alert-info\"  *ngIf=\"showSuccessMessage\">\n        Submitted successfully.\n      </div>\n    </div>\n    <div class=\"col-md-7\">\n      <app-customer-list></app-customer-list>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from 'src/app/shared/employee.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor(public employeeService: EmployeeService,\n              private toatsrService: ToastrService) { }\n\n    ngOnInit(): void {\n      this.resetForm();\n    }\n\n    onSubmit(form?: any) {\n      if (form.value.id == null) {\n        this.employeeService.addEmployee(form.value);\n      } else {\n        this.employeeService.updateEmployee(form.value.id, form.value);\n      }\n      this.resetForm();\n      this.toatsrService.success('employee added successfully', 'EMP. Register');\n    }\n\n    resetForm(form?: NgForm) {\n      if (form != null) {\n      form.resetForm();\n      }\n      this.employeeService.formData = {\n        id: null,\n        fullName: '',\n        position: '',\n        empCode: '',\n        mobile: '',\n      };\n    }\n\n  }\n\n","<h1 class=\"display-4\">EMP. Register</h1>\n<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n  <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"employeeService.formData.id\">\n\n  <div class=\"form-group\">\n    <input name=\"fullName\" #fullName=\"ngModel\" [(ngModel)]=\"employeeService.formData.fullName\" class=\"form-control\" placeholder=\"Full name\" required>\n    <div *ngIf=\"fullName.invalid && fullName.touched\" class=\"validation-error\">This field is required.</div>\n  </div>\n  \n  <div class=\"form-group\">\n    <input name=\"position\" #position=\"ngModel\" [(ngModel)]=\"employeeService.formData.position\" class=\"form-control\" placeholder=\"Position\">\n  </div>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <input name=\"empCode\" #empCode=\"ngModel\" [(ngModel)]=\"employeeService.formData.empCode\" class=\"form-control\" placeholder=\"Emp. code\">\n    </div>\n    <div class=\"form-group  col-md-6\">\n      <input name=\"mobile\" #mobile=\"ngModel\" [(ngModel)]=\"employeeService.formData.mobile\" class=\"form-control\" placeholder=\"Mobile\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn btn-lg btn-block btn-info\">SUBMIT</button>\n  </div>\n\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css']\n})\nexport class EmployeesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-5\">\n        <app-employee></app-employee>\n    </div>\n    <div class=\"col-md-7\">\n        <app-list-employee></app-list-employee>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../../shared/employee.service';\nimport { Employee } from '../../shared/employee.model';\n\n@Component({\n  selector: 'app-list-employee',\n  templateUrl: './list-employee.component.html',\n  styleUrls: ['./list-employee.component.css']\n})\nexport class ListEmployeeComponent implements OnInit {\n\n  list: Employee[];\n  constructor(private employeeService: EmployeeService) { }\n\n  ngOnInit(): void {\n    this.employeeService.getEmployees().subscribe(res => {\n      this.list = res.map(item => {\n        return {\n          id: item.payload.doc.id,\n          ...item.payload.doc.data() as Employee};\n      });\n    });\n  }\n\n  onEdit(employee: Employee) {\n    this.employeeService.formData = Object.assign({}, employee);\n  }\n\n  onDelete(employeeId) {\n    this.employeeService.deleteEmployee(employeeId);\n  }\n}\n","<table class=\"table table-hover\">\n    <thead>\n      <th>Name</th>\n      <th>Position</th>\n      <th>Mobile</th>\n      <th></th>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let emp of list\">\n        <td (click)=\"onEdit(emp)\">{{emp.empCode}} - {{emp.fullName}}</td>\n        <td (click)=\"onEdit(emp)\">{{emp.position}}</td>\n        <td (click)=\"onEdit(emp)\">{{emp.mobile}}</td>\n        <td><a class=\"btn text-danger\" (click)=\"onDelete(emp.id)\"><i class=\"fa fa-trash\"></i></a></td>\n      </tr>\n    </tbody>\n  </table>","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from 'src/app/shared/image.service';\n\n@Component({\n  selector: 'app-image-list',\n  templateUrl: './image-list.component.html',\n  styles: []\n})\nexport class ImageListComponent implements OnInit {\n\n  imageList: any[];\n  rowIndexArray: any[];\n\n  constructor(private imageService: ImageService) { }\n\n  ngOnInit(): void {\n    this.imageService.imageDetailList.snapshotChanges().subscribe(\n      list => {\n        this.imageList = list.map(item => item.payload.val());\n        this.rowIndexArray = Array.from(Array(Math.ceil(this.imageList.length / 3)).keys());\n      }\n    );\n  }\n\n}\n","<table *ngIf=\"imageList\">\n    <tr *ngFor=\"let i of rowIndexArray\">\n        <td>\n            <div class=\"imagebox\" *ngIf=\"i==0\">\n                <a routerLink=\"/image/upload\">\n                    <img src=\"assets/img/new_image.jpg\" class=\"img-fluid\">\n                </a>\n            </div>\n        </td>\n        <td>\n            <div class=\"imagebox\" *ngIf=\"i!=0\">\n                <img [src]=\"imageList[3*i].imageUrl\" class=\"img-fluid\">\n                <span class=\"imagebox-desc\">\n                    {{imageList[3*i].caption}}\n                </span>\n            </div>\n        </td>\n        <td>\n            <div class=\"imagebox\">\n                <img [src]=\"imageList[3*i + 1].imageUrl\" class=\"img-fluid\">\n                <span class=\"imagebox-desc\">\n                    {{imageList[3*i + 1].caption}}\n                </span>\n            </div>\n        </td>\n        <td>\n            <div class=\"imagebox\">\n                <img [src]=\"imageList[3*i + 2].imageUrl\" class=\"img-fluid\">\n                <span class=\"imagebox-desc\">\n                    {{imageList[3*i + 2].caption}}\n                </span>\n            </div>\n        </td>\n    </tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { ImageService } from 'src/app/shared/image.service';\nimport { finalize } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-image',\n  templateUrl: './image.component.html',\n  styles: []\n})\nexport class ImageComponent implements OnInit {\n\n  imgSrc: string;\n  selectedImage: any = null;\n  isSubmitted: boolean;\n\n  formTemplate = new FormGroup({\n    caption: new FormControl('', Validators.required),\n    category: new FormControl(''),\n    imageUrl: new FormControl('', Validators.required)\n  });\n  constructor(private storage: AngularFireStorage,\n              private imageService: ImageService,\n              private toatsrService: ToastrService) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n  }\n\n  showPreview(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (e: any) => this.imgSrc = e.target.result;\n      reader.readAsDataURL(event.target.files[0]);\n      this.selectedImage = event.target.files[0];\n    } else {\n      this.imgSrc = '/assets/img/image_placeholder.jpg';\n      this.selectedImage = null;\n    }\n  }\n\n  onSubmit(formValue) {\n    this.isSubmitted = true;\n    if (this.formTemplate.valid) {\n      const filePath = `${formValue.category}/${this.selectedImage.name.split('.').slice(0, -1).join('.')}_${new Date().getTime()}`;\n      const fileRef = this.storage.ref(filePath);\n      this.storage.upload(filePath, this.selectedImage).snapshotChanges().pipe(\n        finalize(() => {\n          fileRef.getDownloadURL().subscribe((url) => {\n            formValue.imageUrl = url;\n            this.imageService.insertImageDetails(formValue);\n            this.resetForm();\n            this.toatsrService.success('Image loaded successfully', 'Image App');\n          });\n        })\n      ).subscribe();\n    }\n  }\n\n  get formControls() {\n    return this.formTemplate.controls;\n  }\n\n  resetForm() {\n    this.formTemplate.reset();\n    this.formTemplate.setValue({\n      caption: '',\n      imageUrl: '',\n      category: 'Animal'\n    });\n    this.imgSrc = '/assets/img/image_placeholder.jpg';\n    this.selectedImage = null;\n    this.isSubmitted = false;\n  }\n}\n","<div class=\"card\" style=\"width:25rem\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"formTemplate\" (submit)=\"onSubmit(formTemplate.value)\">\n        <div class=\"text-center\">\n          <img [src]=\"imgSrc\" width=\"350px\" height=\"250px\" (click)=\"fileUploader.click()\">\n        </div>\n        <div class=\"form-group\">\n          <label>Select file to upload</label>\n          <input type=\"file\" accept=\"image/*\" class=\"form-control\" #fileUploader formControlName=\"imageUrl\"\n            (change)=\"showPreview($event)\">\n          <div class=\"text-danger\" *ngIf=\"isSubmitted && formControls.imageUrl.errors?.required\">This field is required.\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <input class=\"form-control\" formControlName=\"caption\" placeholder=\"Caption\">\n          <div class=\"text-danger\" *ngIf=\"isSubmitted && formControls.caption.errors?.required\">This field is required.\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <select formControlName=\"category\" class=\"form-control\">\n            <option value=\"Resto\" selected>Resto</option>\n            <option value=\"Test\">Test</option>\n          </select>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <a routerLink=\"/image/list\" class=\"btn btn-primary btn-block float-right\">Go To Gallery</a>\n          </div>\n          <div class=\"form-group col-md-6\">\n            <button type=\"submit\" class=\"btn btn-success btn-block float-right\">Submit</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from '../shared/image.service';\n\n@Component({\n  selector: 'app-images',\n  templateUrl: './images.component.html',\n  styles: []\n})\nexport class ImagesComponent implements OnInit {\n\n  constructor(private imageService: ImageService) { }\n\n  ngOnInit(): void {\n    this.imageService.getImageDetailList();\n  }\n\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-8 offset-md-2\">\n      <blockquote class=\"blockquote\">\n        <p class=\"mb-0 h3 display-4\">Image Gallery</p>\n        <footer class=\"blockquote-footer\">with <cite title=\"Source Title\">Firebase Storage</cite> and <cite\n            title=\"Source Title\">Angular 7</cite></footer>\n      </blockquote>\n      <router-outlet></router-outlet>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private firebase: AngularFireDatabase) {}\n  customerList: AngularFireList<any>;\n\n  form = new FormGroup({\n    $key: new FormControl(null),\n    fullName: new FormControl('', Validators.required),\n    email: new FormControl('', Validators.email),\n    mobile: new FormControl('', [Validators.required, Validators.minLength(4)]),\n    location: new FormControl(''),\n  });\n\n  getCustomers() {\n    this.customerList = this.firebase.list('customers');\n    return this.customerList.snapshotChanges();\n  }\n\n  insertCustomer(customer) {\n    this.customerList.push({\n      fullName: customer.fullName,\n      email: customer.email,\n      mobile: customer.mobile,\n      location: customer.location\n    });\n  }\n\n  populateForm(customer) {\n    this.form.setValue(customer);\n  }\n\n  updateCustomer(customer) {\n    this.customerList.update(customer.$key, {\n      fullName: customer.fullName,\n      email: customer.email,\n      mobile: customer.mobile,\n      location: customer.location\n    });\n  }\n\n  deleteCustomer(customerKey) {\n      this.customerList.remove(customerKey);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Employee } from './employee.model';\nimport { AngularFirestore } from 'angularfire2/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  formData: Employee;\n\n  constructor(private firestore: AngularFirestore) { }\n\n  addEmployee(emp: Employee) {\n    this.firestore.collection('employee').add(emp);\n  }\n\n  updateEmployee(id: string, emp: Employee) {\n    this.firestore.doc('employee/' + id).update(emp);\n  }\n\n  getEmployees() {\n    return this.firestore.collection('employee').snapshotChanges();\n  }\n\n  deleteEmployee(employeeId: string) {\n    this.firestore.doc('employee/' + employeeId).delete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  imageDetailList: AngularFireList<any>;\n\n  constructor(private firebase: AngularFireDatabase) { }\n\n  getImageDetailList() {\n    this.imageDetailList = this.firebase.list('imageDetails');\n  }\n\n  insertImageDetails(imageDetails) {\n    this.imageDetailList.push(imageDetails);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  toDoList: AngularFireList<any>;\n  constructor(private firebasedb: AngularFireDatabase) { }\n\n  getToDoList() {\n    this.toDoList = this.firebasedb.list('titles');\n    return this.toDoList;\n  }\n\n  addTitle(title: string) {\n    this.toDoList.push({\n      title,\n      isChecked: false\n    });\n  }\n\n  checkTitle($key: string, flag: boolean) {\n    this.toDoList.update($key, {isChecked: flag});\n  }\n\n  removeTitle($key: string) {\n    this.toDoList.remove($key);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TodoService } from '../shared/todo.service';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css'],\n  providers: [TodoService]\n})\nexport class TodoComponent implements OnInit {\n\n  todoListArray: any[];\n  constructor(private todoService: TodoService) { }\n\n  ngOnInit(): void {\n    this.todoService.getToDoList().snapshotChanges()\n    .subscribe(item => {\n      this.todoListArray = [];\n      item.forEach(element => {\n        const x = element.payload.toJSON();\n        // x.$key = element.key;\n        this.todoListArray.push(x);\n      });\n      // sort array\n      this.todoListArray.sort((a, b) => {\n        return a.isChecked - b.isChecked;\n      });\n    });\n  }\n\n  onAdd(itemTitle) {\n    this.todoService.addTitle(itemTitle.value);\n    itemTitle.value = null;\n  }\n\n  alterCheck($key: string, isChecked) {\n    this.todoService.checkTitle($key, !isChecked);\n\n  }\n\n  onDelete($key: string) {\n    this.todoService.removeTitle($key);\n  }\n\n}\n","<div class=\"jumbotron\" style=\"padding: 45px 0px;\">\n    <h4 class=\"text-center\">To List app</h4>\n</div>\n\n<div class=\"input-group\">\n    <input type=\"text\" class=\"form-control\" #itemTitle>\n    <div class=\"input-group-addon hover-cursor\" (click) = \"onAdd(itemTitle)\">\n        <i class=\"fa fa-plus-circle fa-2x\"></i>\n    </div>\n</div>\n\n<div style=\"margin: 5px 0px;\">\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\" *ngFor='let item of todoListArray'>\n            <span class=\"hover-cursor\" [class.text-success]='item.isChecked' \n                    (click)='alterCheck(item.$key,item.isChecked)'>\n                <i class=\"fa fa-lg\" [ngClass]=\"item.isChecked?'fa-check-circle-o':'fa-circle-thin'\"></i>\n            </span>\n            {{item.title}}\n            <span class=\"hover-cursor text-danger pull-right\" (click)='onDelete(item.$key)'>\n                <i class=\"fa fa-trash-o fa-lg\"></i>\n            </span>\n        </li>\n    </ul>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyDPuS2ce36h2inBI5q6SJ8_hb65zeKc_WQ',\n    authDomain: 'fir-crudapp-853ac.firebaseapp.com',\n    databaseURL: 'https://fir-crudapp-853ac.firebaseio.com',\n    projectId: 'fir-crudapp-853ac',\n    storageBucket: 'fir-crudapp-853ac.appspot.com',\n    messagingSenderId: '18860355469',\n    appId: '1:18860355469:web:e306d579fab077b4c757c4',\n    measurementId: 'G-D2BMR3FJGM'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}